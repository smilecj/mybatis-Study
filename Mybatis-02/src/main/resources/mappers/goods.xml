<?xml version="1.0" encoding="UTF8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goods">
                   <!--开启二级缓存-->
  <cache eviction="LRU" flushInterval="600000" size="512" readOnly="true"/>
  <select id="selectAll" resultType="cn.smilehalo.entity.Goods" useCache="false">
    select*from t_goods order by goods_id desc limit 10;
  </select>


  <select id="selectById" parameterType="Integer" resultType="cn.smilehalo.entity.Goods">
    select * from t_goods where goods_id=#{value}
  </select>

  <select id="selectByPriceRange" parameterType="java.util.Map" resultType="cn.smilehalo.entity.Goods">
    select *from t_goods
    where
        current_price between #{min} and #{max}
    order by current_price
    limit 0,#{limit}
  </select>

  <!--  查询语句中的（flushCache=“true”）  执行sql 语句之后  自动清除缓存-->
  <select id="selectGoodsMap" resultType="java.util.LinkedHashMap" flushCache="true">
  select g.* ,c.category_name from t_goods g,t_category c
  where g.category_id = c.category_id;
  </select>
<!--结果映射-->
  <resultMap id="rmGoods" type="cn.smilehalo.dto.GoodsDTO">
    <!--设置主键字段与属性的映射-->
    <id property="goods.goodsId" column="goods_id"></id>
    <!--设置非主键字段与属性的映射-->
    <result property="goods.title" column="title"></result>
    <result property="goods.originalCost" column="original_cost"></result>
    <result property="goods.currentPrice" column="current_price"></result>
    <result property="goods.discount" column="discount"></result>
    <result property="goods.isFreeDelivery" column="is_free_delivery"></result>
    <result property="goods.categoryId" column="category_id"></result>
    <result property="categoryName"  column="category_name"></result>
    <result property="test" column="test"></result>
  </resultMap>
  <select id="selectGoodsDTO" resultMap="rmGoods">
    select g.* ,c.category_name,'1' as test from t_goods g,t_category c
  where g.category_id = c.category_id;
  </select>


  <insert id="insert" parameterType="cn.smilehalo.entity.Goods">

    INSERT INTO t_goods(title,sub_title,original_cost,current_price,discount,is_free_delivery,category_id)
    VALUE(#{title},#{subTitle},#{originalCost},#{currentPrice},#{discount},#{isFreeDelivery},#{categoryId});

    <selectKey resultType="Integer" keyProperty="goodsId" order="AFTER">
      select last_insert_id()
    </selectKey>
  </insert>

  <update id="update" parameterType="cn.smilehalo.entity.Goods">
    UPDATE t_goods
    SET
        title = #{title},
        sub_title = #{subTitle},
        original_cost = #{originalCost},
        current_price = #{currentPrice},
        discount = #{discount},
        is_free_delivery = #{isFreeDelivery},
        category_id = #{categoryId}
    WHERE
        goods_id = #{goodsId};
  </update>

  <delete id="delete" parameterType="Integer">
        delete from t_goods where goods_id = #{value}
  </delete>

  <select id="dynamicSQL" parameterType="java.util.Map" resultType="cn.smilehalo.entity.Goods">
    select * from t_goods
    <where>
      <if test="categoryId != null">
        and category_id = #{categoryId}
      </if>
      <if test="currentPrice != null">
        and current_price &lt; #{currentPrice}
      </if>
    </where>
  </select>
          <!-- 一对多对象关联查询-->
<!--
  resultMap可用与说明一对多或者多对一的映射逻辑
  id是resultMap属性引用的标志
  type 指向对应的实体
  -->
  <resultMap id="rmGoods1" type="cn.smilehalo.entity.Goods">
<!--    映射goods对象的主键到goods_id字段-->
    <id column="goods_id" property="goodsId"></id>
    <!--
    collection的含义是，在
    select * from t_goods limit 0,1; 得到结果后，对所有Good对象遍历得到goods_id字段值，
    并带入到goodsDetail命名空间的findByGoodsId的SQL中执行查询，
    将得到的“商品信息”集合赋值给goodsDetails List 对象
    -->
    <collection property="goodDetails" select="goodsDetail.selectByGoodsId" column="goods_id"/>
  </resultMap>

  <select id="selectOneToMany" resultMap="rmGoods1">
    select * from t_goods limit 0,1;
  </select>


</mapper>